package rpc;

message Request
{
	required string method = 1;
	optional bytes serialized_request = 2;
};

enum StpResult
{
	SR_OK 							= 0; // 通用表示成功的结果
	SR_NegotiateFailed 			= 1; // 密钥协商失败
	SR_InvalidToken 			= 2; // 非法的token
	SR_TokenExpired 			= 3; // token过期
	SR_InvalidGuid 				= 4; // 非法的guid
	SR_ReportStatusFailed 		= 5; // 上报状态失败
};

message C2S_Ping
{
};

message S2C_Ping
{
};

// 通用请求
message C2S_StpCryptoReq
{
	optional StpToken token = 1;
	optional bytes data = 2;
};

// 通用回复
message S2C_StpCryptoRsp
{
	optional StpResult res = 1;
	optional StpToken token = 2;
	optional bytes 	data = 3;
};

// 密钥协商
message C2S_StpCryptoNegotiate
{
	optional uint64 stp_guid = 1;
	optional StpToken token = 2;
};

// 密钥协商
message S2C_StpCryptoNegotiate
{
	optional StpResult res = 1;
	optional uint64 stp_guid = 2;
	optional StpToken token = 3;
};

// 上报Stp状态
message S2D_StpReportStatus
{
	optional uint64 stp_guid = 1;
	optional string key = 2;
	optional string expires = 3;
	optional int32 group = 4;
	optional int32 idx = 5;
	optional string ip = 6;
};

message StpToken
{
	optional uint64 stp_guid = 1;
	optional int32 group = 2;
	optional int32 idx = 3;
	optional int64 expires = 4;
	optional string key = 5;
};


